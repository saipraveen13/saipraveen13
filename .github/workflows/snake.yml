name: GitHub Fireworks Animation
on:
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC
  workflow_dispatch:      # Manual trigger
  push:
    branches:
      - main

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests pygifsicle pillow

      - name: Create fireworks animation
        run: |
          cat > generate_fireworks.py << 'EOF'
          import requests
          import json
          from PIL import Image, ImageDraw
          import random
          import os
          from glob import glob

          # Get GitHub contributions data
          username = "${{ github.repository_owner }}"
          url = f"https://github.com/users/{username}/contributions"
          response = requests.get(url)
          data = response.text

          # Parse contributions (simplified parsing)
          contributions = []
          for line in data.split('\n'):
              if 'data-count=' in line and 'data-date=' in line:
                  count = int(line.split('data-count="')[1].split('"')[0])
                  date = line.split('data-date="')[1].split('"')[0]
                  if count > 0:
                      contributions.append((date, count))

          # Create fireworks animation
          width, height = 800, 200
          frames = 30
          gif_frames = []

          for frame in range(frames):
              img = Image.new('RGB', (width, height), color=(13, 17, 23))  # GitHub dark bg
              draw = ImageDraw.Draw(img)
              
              # Draw contribution grid in the background (faint)
              for i, (date, count) in enumerate(contributions[:100]):  # Limit to 100 most recent
                  x = (i % 20) * 40 + 20
                  y = (i // 20) * 40 + 20
                  size = min(8, 2 + count // 5)
                  color = (45, 125, 250, 50)  # Faint blue
                  draw.ellipse([x-size, y-size, x+size, y+size], fill=color)
              
              # Create fireworks
              if frame % 5 == 0 and contributions:  # Launch new firework every 5 frames
                  # Choose a random contribution as launch point
                  contri_idx = random.randint(0, min(50, len(contributions)-1))
                  date, count = contributions[contri_idx]
                  
                  # Position based on contribution index
                  x = (contri_idx % 20) * 40 + 20
                  y = (contri_idx // 20) * 40 + 20
                  
                  # Firework size based on contribution count
                  particles = min(50, 10 + count * 2)
                  
                  # Draw particles expanding from the center
                  for i in range(particles):
                      angle = random.uniform(0, 6.28)
                      distance = (frame % 5) * 5
                      px = x + distance * math.cos(angle)
                      py = y + distance * math.sin(angle)
                      
                      # Color based on contribution count
                      colors = [
                          (255, 100, 100),  # Red
                          (100, 255, 100),  # Green
                          (100, 100, 255),  # Blue
                          (255, 255, 100),  # Yellow
                          (255, 100, 255),  # Magenta
                      ]
                      color = colors[count % len(colors)]
                      
                      size = random.randint(1, 3)
                      draw.ellipse([px-size, py-size, px+size, py+size], fill=color)
              
              # Add to frames
              gif_frames.append(img)
          
          # Save as GIF
          gif_frames[0].save(
              'dist/github-fireworks.gif',
              save_all=True,
              append_images=gif_frames[1:],
              duration=100,
              loop=0,
              optimize=True
          )
          EOF

          python generate_fireworks.py

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: output
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: "Update fireworks animation [skip ci]"

      - name: Update README with Fireworks Badge
        run: |
          # Add a badge to the README showing the latest animation
          echo "\n## ðŸŽ† GitHub Contributions Fireworks\n![GitHub Fireworks](https://github.com/${{ github.repository }}/blob/output/github-fireworks.gif)" >> README.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Add fireworks animation badge to README" || echo "No changes to commit"
          git push
